openapi: 3.0.0
info:
  title: AhoBe API
  version: 1.0.0
  description: AhoBe API documentation
servers:
  - url: http://localhost:3002/api
  - url: http://152.42.180.14:3002/api
  - url: https://152.42.180.14/api

components:
  securitySchemes:
    auth0: 
      type: http
      scheme: bearer
      bearerFormat: JWT    
      description: Auth0 token
    
    secToken:
      type: apiKey
      in: header
      name: secToken
      description: Used to connect from auth0 custom database



paths:
  /auth0db/v1/login:
    put:
      summary: Login endpoint
      tags:
        - "auth0db"
      security:
        - secToken: []      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
    
      responses:
        '200':
          description: Successful login
        # email invalid
        '400':
          description: Email invalid
        # password invalid
        '401':
          description: Unauthorized
        
        '403':
          description: Forbiddens

  /auth0db/v1/create:
    post:
      summary: Create user auth0 endpoint
      tags:
        - "auth0db"
      security:
        - secToken: []      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: Successful creation
         # password invalid
        '400':
          description: email or password invalids
        # user already exists
        '409':
          description: User already exists

       
  
  /auth0db/v1/verify:
    put:
      summary: Verify email
      tags:
        - "auth0db"
      security:
        - secToken: []
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string

      responses:
        '200':
          description: Successful verification
        # user already verified
        # '409':
        #   description: User already verified


  /auth0db/v1/changePassword:
    put:
      summary: Change password
      tags:
        - "auth0db"
      security:
        - secToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: Successful change
        # user not found
        '404':
          description: User not found
        # password invalid
        '400':
          description: email or password invalids
        # newPassword invalid
        '403':
          description: Forbidden

  /auth0db/v1/loginByEmail:
    put:
      summary: Login by email
      tags:
        - "auth0db"
      security:
        - secToken: []
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string

      responses:
        '200':
          description: Successful login
        '400':
          description: Email invalid
        # user not found
        '404':
          description: User not found


  /auth0db/v1/remove:
    delete:
      summary: Remove user
      tags:
        - "auth0db"
      security:
        - secToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string

      responses:
        '200':
          description: Successful remove
        # user not found
        '404':
          description: User not found



  /dashboard/v1/users:
    get:
      summary: Get all users
      tags:
        - "dashboard"
      security:
        - auth0: []      
      parameters:
        # for pagination
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 20
        - name: sub
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful get
          # response format
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      rows:
                        type: array
                        items:
                          type: object
                          properties:
                            userId:
                              type: integer
                              minimum: 0
                              example: 1
                            nickname:
                              type: string
                              example: "user1"
                            lastSession:
                              type: string
                              format: date-time
                              example: "2021-01-01T00:00:00Z"
                            lastLogin:
                              type: string
                              format: date-time
                              example: "2021-01-01T00:00:00Z"
                            loginCount:
                              type: integer
                              minimum: 0
                              example: 100
                            email:
                              type: string
                              example: "example@gmail.com"
                            createdAt:
                              type: string
                              format: date-time
                              example: "2021-01-01T00:00:00Z"
                       
                  count:
                    type: integer
                    minimum: 0
                    example: 100

  /dashboard/v1/summary:
    get:
      summary: Get users summary
      tags:
        - "dashboard"
      security:
        - auth0: []
      parameters:
        - name: sub
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful get
          # response format
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      userCount:
                        type: integer
                        minimum: 0
                        example: 100
                      userSessionCount:
                        type: object
                        properties:
                          todayTotal:
                            type: integer
                            minimum: 0
                            example: 100
                          last7DaysAverage:
                            type: integer
                            minimum: 0
                            example: 100

  /user/v1/verification/email:
    post:
      summary: Send verification email
      tags:
        - "user"
      security:
        - auth0: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Successful send
        # user not found
        '404':
          description: User not found
        # user already verified
        '409':
          description: User already verified

  /user/v1/afterauth:
    post:
      summary: After auth
      tags:
        - "user"
      security:
        - auth0: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  required:
                    - "email"
                  properties:
                    email:
                      type: string
                    nickname:
                      type: string
                    name:
                      type: string
                    picture:
                      type: string
                      format: uri
                    locale:
                      type: string

      responses:
        '200':
          description: Successful after auth

   
          
        
